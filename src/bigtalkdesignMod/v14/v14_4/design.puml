@startuml design

abstract Subject {
    + {abstract} attach(StockObserver observer)
    + {abstract} detach(StockObserver observer)
    + {abstract} notifyEmployee()
    + {abstract} getAction(): String 
    + {abstract} setAction(String value)
}

class Secretary extends Subject {
    + attach(StockObserver observer)
    + detach(StockObserver observer)
    + notifyEmployee()
    + getAction(): String 
    + setAction(String value)
}

class Boss extends Subject {
    + attach(StockObserver observer)
    + detach(StockObserver observer)
    + notifyEmployee()
    + getAction(): String 
    + setAction(String value)
}

abstract Observer {
    # sub: Secretary
    + update()
}

class StockObserver {
    # sub: Secretary
    + update()
}

abstract NBAObserver {
    # sub: Secretary
    + update()
}

Observer <|-- StockObserver
Observer <|-- NBAObserver

Subject ..> Observer
Subject <.. StockObserver
Subject <.. NBAObserver

@enduml